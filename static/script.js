document.addEventListener('DOMContentLoaded', function() {
    console.log('DOM –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞...');
    
    let isProcessing = false;
    let chatSessionStarted = false;

    function getElementSafe(id) {
        const element = document.getElementById(id);
        if (!element) {
            console.error(`–≠–ª–µ–º–µ–Ω—Ç —Å ID '${id}' –Ω–µ –Ω–∞–π–¥–µ–Ω!`);
        }
        return element;
    }

    const elements = [
        'ai-chat-container', 'ai-chat-toggle', 'ai-chat-minimize',
        'ai-chat-close', 'ai-chat-messages', 'ai-chat-input',
        'ai-chat-send', 'ai-chat-form'
    ].map(id => getElementSafe(id));

    const [
        chatContainer, chatToggle, chatMinimize,
        chatClose, chatMessages, chatInput,
        chatSend, chatForm
    ] = elements;

    if (!chatContainer || !chatMessages) {
        console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã —á–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
        return;
    }
    
    function isStorageSupported(type) {
        try {
            const test = 'test';
            const storage = window[type];
            storage.setItem(test, test);
            storage.removeItem(test);
            return true;
        } catch (e) {
            console.warn(`${type} –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è:`, e);
            return false;
        }
    }
    
    function addMessage(text, sender) {
        const messageElement = document.createElement('div');
        messageElement.classList.add('message', sender === 'user' ? 'user-message' : 'ai-message');
        messageElement.textContent = text;
        chatMessages.appendChild(messageElement);
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }
    
    function startChatSession() {
        if (chatSessionStarted) return;
        
        chatSessionStarted = true;
        
        // –ú–∞—Å—Å–∏–≤ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
        const welcomeMessages = [
            "–ü—Ä–∏–≤–µ—Ç! –†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å! –ú–µ–Ω—è –∑–æ–≤—É—Ç –†–µ–Ω–∞—Ç. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ú–µ–Ω—è –∑–æ–≤—É—Ç –†–µ–Ω–∞—Ç.–ì–æ—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã.",
            "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!–ú–µ–Ω—è –∑–æ–≤—É—Ç –†–µ–Ω–∞—Ç.–Ø –≤–∞—à AI-–ø–æ–º–æ—â–Ω–∏–∫. –ß–µ–º –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω?",
            "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!–ú–µ–Ω—è –∑–æ–≤—É—Ç –†–µ–Ω–∞—Ç. –ö–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å–µ–≥–æ–¥–Ω—è?",
            "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ú–µ–Ω—è –∑–æ–≤—É—Ç –†–µ–Ω–∞—Ç. –†–∞–¥ –Ω–∞—á–∞—Ç—å —Å –≤–∞–º–∏ –¥–∏–∞–ª–æ–≥. –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?"
        ];
        
        // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        const randomWelcome = welcomeMessages[Math.floor(Math.random() * welcomeMessages.length)];
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ "–∑–∞–≥—Ä—É–∑–∫–∏"
        setTimeout(() => {
            addMessage(randomWelcome, 'ai');
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏
            setTimeout(() => {
                addMessage("–í—ã –º–æ–∂–µ—Ç–µ —Å–ø—Ä–æ—Å–∏—Ç—å –º–µ–Ω—è –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö, –æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è—Ö", 'ai');
            }, 800);
        }, 500);
    }
    
    function autoOpenChat() {
        if (isStorageSupported('sessionStorage') && !sessionStorage.getItem('chatGreetingShown')) {
            chatContainer.classList.add('open');
            sessionStorage.setItem('chatGreetingShown', 'true');
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Å—Å–∏—é –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —á–∞—Ç–∞
            setTimeout(startChatSession, 300);
        }
    }
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Å—Å–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    function initChatSession() {
        if (isStorageSupported('localStorage')) {
            const lastSession = localStorage.getItem('lastChatSession');
            const now = Date.now();
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Å—Å–∏—é, –µ—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª—å—à–µ 30 –º–∏–Ω—É—Ç —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–µ—Å—Å–∏–∏
            // –∏–ª–∏ –µ—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –≤–∏–∑–∏—Ç
            if (!lastSession || (now - parseInt(lastSession)) > 1800000) {
                startChatSession();
                localStorage.setItem('lastChatSession', now.toString());
            }
        } else {
            // –ï—Å–ª–∏ localStorage –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, –ø—Ä–æ—Å—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Å—Å–∏—é
            startChatSession();
        }
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –µ—Å–ª–∏ —á–∞—Ç —Å–≤–µ—Ä–Ω—É—Ç
    function showNotification() {
        if (!chatContainer.classList.contains('open')) {
            // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–º–æ–∂–Ω–æ —Å—Ç–∏–ª–∏–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ CSS)
            const notification = document.createElement('div');
            notification.style.cssText = `
                position: fixed;
                bottom: 100px;
                right: 20px;
                background: #007bff;
                color: white;
                padding: 10px 15px;
                border-radius: 8px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.2);
                z-index: 1000;
                cursor: pointer;
                animation: fadeIn 0.3s ease;
            `;
            notification.textContent = 'üí¨ AI-–ø–æ–º–æ—â–Ω–∏–∫ –≥–æ—Ç–æ–≤ –∫ –æ–±—â–µ–Ω–∏—é!';
            notification.onclick = () => {
                chatContainer.classList.add('open');
                document.body.removeChild(notification);
            };
            
            document.body.appendChild(notification);
            
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
            setTimeout(() => {
                if (document.body.contains(notification)) {
                    document.body.removeChild(notification);
                }
            }, 5000);
        }
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ Enter
    if (chatInput) {
        chatInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                chatSend.click();
            }
        });
    }
    
    if (chatToggle) {
        chatToggle.addEventListener('click', function() {
            chatContainer.classList.toggle('open');
            
            // –ï—Å–ª–∏ —á–∞—Ç –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –∏ —Å–µ—Å—Å–∏—è –µ—â–µ –Ω–µ –Ω–∞—á–∞—Ç–∞, –∑–∞–ø—É—Å–∫–∞–µ–º –µ—ë
            if (chatContainer.classList.contains('open') && !chatSessionStarted) {
                startChatSession();
            }
        });
    }
    
    if (chatMinimize) {
        chatMinimize.addEventListener('click', function() {
            chatContainer.classList.remove('open');
        });
    }
    
    if (chatClose) {
        chatClose.addEventListener('click', function() {
            chatContainer.classList.remove('open');
            sessionStorage.removeItem('chatGreetingShown');
        });
    }
    
    if (chatForm) {
        chatForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            if (isProcessing) return;
            
            const userMessage = chatInput.value.trim();
            if (!userMessage) return;
            
            isProcessing = true;
            chatSend.disabled = true;
            
            const loadingIndicator = document.createElement('div');
            loadingIndicator.classList.add('message', 'ai-message', 'loading');
            loadingIndicator.textContent = '–ò–ò –¥—É–º–∞–µ—Ç...';
            chatMessages.appendChild(loadingIndicator);
            chatMessages.scrollTop = chatMessages.scrollHeight;
            
            addMessage(userMessage, 'user');
            chatInput.value = '';
            
            try {
                const response = await fetch('/chat', {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify({message: userMessage})
                });
                
                chatMessages.removeChild(loadingIndicator);
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                const data = await response.json();
                
                if (data.reply && !data.reply.includes('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:')) {
                    addMessage(data.reply, 'ai');
                } else {
                    addMessage('–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', 'ai');
                }
            } catch (error) {
                console.error('Error:', error);
                addMessage('–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', 'ai');
            } finally {
                isProcessing = false;
                chatSend.disabled = false;
            }
        });
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —á–∞—Ç –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    autoOpenChat();
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Å—Å–∏—é —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    setTimeout(() => {
        initChatSession();
        showNotification();
    }, 2000);
});

// –î–æ–±–∞–≤–ª—è–µ–º CSS –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
const style = document.createElement('style');
style.textContent = `
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(20px); }
        to { opacity: 1; transform: translateY(0); }
    }
`;
document.head.appendChild(style);